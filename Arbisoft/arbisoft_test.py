# -*- coding: utf-8 -*-
"""Arbisoft_test.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KMj5Bk9TWQjys44tpPCN5VEb_ub5cnDL
"""

from urllib.request import urlopen
  
# import json
import json
# store the URL in url as 
# parameter for urlopen
url = "https://www.jsonkeeper.com/b/ITZH"
 
# store the response of URL
response = urlopen(url)
  
# storing the JSON response 
# from url in data
data_json = json.loads(response.read())
  
# print the json response
for key,value in data_json.items():
    print("...")
    print(key)
    print(value)

print(data_json.get("data"))

portal_data=data_json.get("data")

timelines=portal_data.get("timelines")
masks=portal_data.get("masks")


action_plan=portal_data.get("action_plan")
operations=action_plan.get("operation")
sub_operations=action_plan.get("sub_operations")

from sklearn.utils.multiclass import unique_labels
#Timelines grouped by mask labels
unique_masks=unique_labels(masks)
print(unique_masks)

mask_timelines = {k:[] for k in unique_masks}

for mask,timeline in zip(masks,timelines):
    mask_timelines[mask].append(timeline)
print(mask_timelines)

Actual_operation={'FOO':'SUM','FOX':'MAX','BAR':'MIN'}
print(Actual_operation)
print(sub_operations)

operation_labels = {key: Actual_operation[value] for key, value in sub_operations.items()}
print(operation_labels)

#perform suboperations
sub_operation_list=[]
for key, value in mask_timelines.items():
  if(key=='B'):
    sub_operation_list.append(min(value))
  elif(key=='R'):
    sub_operation_list.append(max(value))
  elif(key=='W'):
    sub_operation_list.append(min(value))

print(sub_operation_list)

#perform operations 
sum(sub_operation_list)